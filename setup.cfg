# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html

[metadata]
name = django-nova-friend
version = 0.1
description = Django app with user's features.
long_description = file: README.md
url = https://pypi.letsnova.ru/#/package/django-nova-friend
author = Nova.
author_email = tech@letsnova.ru.
license = NovaCustomLicense
classifiers =
  Environment :: Web Environment
  Framework :: Django
  Framework :: Django :: 3.2
  Intended Audience :: Developers
  License :: Custom
  Operating System :: Linux
  Programming Language :: Python
  Programming Language :: Python 3
  Programming Language :: Python 3.11

[options]
include_package_data = true
package_dir=src
packages = users
python_requires = >=3.11
install_requires =
  Django >= 3.2

[flake8]
# flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
format = nova
show-source = True
statistics = False
doctests = True
enable-extensions = G
nested-classes-whitelist = NovaMeta,Meta,Params
pytest-fixture-no-parentheses = True
count = True

# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long
docstring-style = numpy

# Flake plugins:
max-line-length = 80
max-complexity = 6
max-imports = 14

# Excluding some directories:
exclude =
  .git,__pycache__,.venv,.eggs,*.egg

# Disable some pydocstyle checks:
ignore = D100, D104, D106, D401, X100, W504, RST303, RST304, DAR103,
         DAR203,
         # у нас django, мы постоянно используем ClassVal + instance Val
         WPS601,
         # мы любим f-string и не согласны с автором этой директивы
         WPS305,
         # слишком часто надо отключать для типовых слов (username и т.п.)
         WPS226,
         # мы не согласны с тем, что migratios/0001_initial.py - некорректно имя
         WPS102,
         # можем использовать апперкейсы в классах (например, в чойсах)
         WPS115,
         # не хотим писать докстринг к __str__
         D105,
         # понимаем, что Pickle не безопасен, но используем с умом его
         S301, S403,
         # format=nova - это норм для нас
         NIP323,
         # unpythonic getter or setter. Мы их не делаем, а в Serializer-ах
         # они есть как get_field
         WPS615,
         # разрешаем :=
         WPS332,
         # WPS410 - разрешаем __all__
         WPS410,
         # WPS412 - разрешаем логику в init файле. Используем для импортов.
         WPS412,

# Docs: https://github.com/snoack/flake8-per-file-ignores
# You can completely or partially disable our custom checks,
# to do so you have to ignore `WPS` letters for all python files:
per-file-ignores =
  # WPS407 - разрешаем использовать для констант изменяемые типы.
  # WPS432 - разрешаем магические числа.
  server/settings/*.py: WPS407, WPS432
  # F401 - внутри __init__ импортируем модули, но не используем их.
  # Но на самом деле используем в коде.
  src/*/__init__.py: F401
  # E501 - разрешаем длинные строки.
  # WPS114 - разрешаем числа в названиях миграции.
  # WPS221, WPS432 - миграции могут иметь сложную строку и магические числа.
  # Игнорируем ошибку DJ01 для переводимых полей.
  src/*/migrations/*.py: E501, WPS221, WPS432, WPS114, DJ01
  # WPS202: в admin много модулей и они легко читаются
  src/*/admin.py: WPS202
  # WPS202 - много модулей и они легко читаются.
  # S101 - в тестах мы используем assert.
  # WPS43 - разрешаем магические числа.
  # WPS442 - фикстуры приводят к ошибочному срабатыванию names shadowing.
  tests/*.py: S101, WPS43, WPS442, WPS202
  # WPS301 - разрешаем использовать import
  # F401 - импорты не используются в файле apps, но нужны в приложении
  # WPS433 - разрешаем import внутри кода
  src/*/apps.py: WPS301, F401, WPS433

[isort]
# https://pycqa.github.io/isort/docs/configuration/profiles.html
profile = wemake

[tool:pytest]
# Django configuration:
# https://pytest-django.readthedocs.io/en/latest/
DJANGO_SETTINGS_MODULE = server.settings
# Включаем принудительно дебаг режим
django_debug_mode = True

# Timeout for tests, so they can not take longer
# than this amount of seconds.
# You should adjust this value to be as low as possible.
# Configuration:
# https://pypi.org/project/pytest-timeout/
timeout = 60

# Directories that are not visited by pytest collector:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__ models

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.
addopts =
  --strict-markers
  --strict-config
;  --doctest-modules # отключили из-за того, что два раза импортируется и падает админка
  --fail-on-template-vars
  --dup-fixtures
  # Output:
  --tb=short
  # Parallelism:
  # -n auto
  # --boxed

  # Coverage:
;  --cov=src
;  --cov=server
;  --cov=tests
;  --cov-branch
;  --cov-report=term-missing:skip-covered
;  --cov-report=html
;  --cov-fail-under=100
python_files = tests.py test_*.py *_tests.py

[coverage:run]
plugins =
    django_coverage_plugin

[mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
allow_redefinition = False
check_untyped_defs = True
disallow_untyped_decorators = True
disallow_any_explicit = True
disallow_any_generics = True
disallow_untyped_calls = True
ignore_errors = False
ignore_missing_imports = True
implicit_reexport = False
local_partial_types = True
strict_optional = True
strict_equality = True
no_implicit_optional = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
warn_no_return = True

plugins =
  mypy_django_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = server.settings

[mypy-src.nova_friend.migrations.*]
# Django migrations should not produce any errors:
ignore_errors = True

[mypy-server.apps.*.models]
# using `Any` inside.
disallow_any_explicit = False


[doc8]
# doc8 configuration:
# https://github.com/pycqa/doc8
ignore-path = docs/_build
max-line-length = 80
sphinx = True
